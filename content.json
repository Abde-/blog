{"meta":{"title":"Abde's stuff","subtitle":null,"description":"Abde's blog with stupid stuff","author":"Abdeselam El-Haman Abdeselam","url":"http://Abde5.github.io/blog"},"pages":[{"title":"About","date":"2017-08-29T01:54:39.277Z","updated":"2017-08-29T01:54:39.277Z","comments":true,"path":"about/index.html","permalink":"http://Abde5.github.io/blog/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2017-08-29T01:54:39.280Z","updated":"2017-08-29T01:54:39.280Z","comments":true,"path":"categories/index.html","permalink":"http://Abde5.github.io/blog/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-08-29T01:54:39.277Z","updated":"2017-08-29T01:54:39.277Z","comments":true,"path":"tags/index.html","permalink":"http://Abde5.github.io/blog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"GSOC final report","slug":"gsocfinal","date":"2017-08-29T01:56:20.000Z","updated":"2017-08-29T02:48:00.206Z","comments":true,"path":"2017/08/29/gsocfinal/","link":"","permalink":"http://Abde5.github.io/blog/2017/08/29/gsocfinal/","excerpt":"Final report from Abdeselam El-Haman Abdeselam for GSOC 2017I have been working for Copyleft Games during this summer. My project this summer has been to introduce shadow rendering by shadow mappingin PySoy. This work can be seen in my fork hosted in bitbucket (branch shadow, commits 6facf3a to 0f0580b)and also read my devlog during this whole summer.","text":"Final report from Abdeselam El-Haman Abdeselam for GSOC 2017I have been working for Copyleft Games during this summer. My project this summer has been to introduce shadow rendering by shadow mappingin PySoy. This work can be seen in my fork hosted in bitbucket (branch shadow, commits 6facf3a to 0f0580b)and also read my devlog during this whole summer. My workI implemented the codebase for a shadow mapping rendering of a Scene (Scene.gs).This rendering is composed in two important parts. During the first one, the depthmapof the scene is generated (shadowpass) and then used to generate the new rendered pictureby comparing the point distance with the depth at that same spot in the depthmap generated before (mainpass). You can have more details here. PySoy uses the OpenGL ES2 API to render its images and GLSL for the shaders. I have then implemented 2 shaders for the depthmap and shadow rendering (the two steps described before). I have also computed the matrices used in this algorithm (_configure_matrix) likethe light projection and the light view (the camera projections were already calculated in the PySoy soure code). In the end, I’ve tried to code something to debug the depthmap. I’ve begun but it didn’twork… The idea was to actually draw a quad that covers the whole screen and showsthe texture (shadowmap) generated in the first step of the algorithm. Unfortunately, my objective wasn’t accomplished, as I couldn’t make it work in the end. I have experienced some issues in this project: OpenGL ES2 is not used anymore and it has been difficult to find resources and tutorials to help me get into it for the shadow mapping (this is my first experience with shaders). Debugging shaders is not as easy as it seems to be. In the first place, I didn’tsee any difference with or without my shaders. I actually found out why (nested shaders). Things done and things to do [x] Shadow rendering codebase. [x] Matrix calculus. [x] Debugging codebase (quad). [ ] Debugging the debugging code. [ ] Make the shaders work as they should. [ ] Calculate the matrixes per light source. [ ] Cubemap of depthmaps for no directional lights. [ ] OPTIONAL: link GLM library (maybe as a gsoc project for the future?).","categories":[{"name":"gsoc","slug":"gsoc","permalink":"http://Abde5.github.io/blog/categories/gsoc/"}],"tags":[{"name":"rendering","slug":"rendering","permalink":"http://Abde5.github.io/blog/tags/rendering/"},{"name":"3d","slug":"3d","permalink":"http://Abde5.github.io/blog/tags/3d/"},{"name":"pysoy","slug":"pysoy","permalink":"http://Abde5.github.io/blog/tags/pysoy/"}]},{"title":"GSOC devlog (20/8/2017)","slug":"gsoc5","date":"2017-08-10T17:17:22.000Z","updated":"2017-08-29T02:10:21.943Z","comments":true,"path":"2017/08/10/gsoc5/","link":"","permalink":"http://Abde5.github.io/blog/2017/08/10/gsoc5/","excerpt":"","text":"Hello, After some research and some explanations from my mentors, I’ve checked that the shaders are actually being used, so the problem comes from the shader code. I will code some debugging environment for the rest of the GSOC (28 August). The debugging will at least show the depthmap generated by the first render pass, so the work can be continued afterwards. See you next time,Abde.","categories":[{"name":"gsoc","slug":"gsoc","permalink":"http://Abde5.github.io/blog/categories/gsoc/"}],"tags":[{"name":"rendering","slug":"rendering","permalink":"http://Abde5.github.io/blog/tags/rendering/"},{"name":"3d","slug":"3d","permalink":"http://Abde5.github.io/blog/tags/3d/"},{"name":"pysoy","slug":"pysoy","permalink":"http://Abde5.github.io/blog/tags/pysoy/"}]},{"title":"GSOC devlog (10/8/2017)","slug":"gsoc4","date":"2017-08-10T13:17:22.000Z","updated":"2017-08-29T02:10:29.997Z","comments":true,"path":"2017/08/10/gsoc4/","link":"","permalink":"http://Abde5.github.io/blog/2017/08/10/gsoc4/","excerpt":"Hello, I’ve done a work in research since the last devlog. My shaders still aren’t working.I guess that the bodies are already rendered with the material shaders. I tried torender differently the main pass and depthmap generation with another function at the bodies render_simple that’d do a call to glDrawElements so I can choose what VertexAttrib I enable before the call to this function.","text":"Hello, I’ve done a work in research since the last devlog. My shaders still aren’t working.I guess that the bodies are already rendered with the material shaders. I tried torender differently the main pass and depthmap generation with another function at the bodies render_simple that’d do a call to glDrawElements so I can choose what VertexAttrib I enable before the call to this function. My work is to be continued… See you next time,Abde.","categories":[{"name":"gsoc","slug":"gsoc","permalink":"http://Abde5.github.io/blog/categories/gsoc/"}],"tags":[{"name":"rendering","slug":"rendering","permalink":"http://Abde5.github.io/blog/tags/rendering/"},{"name":"3d","slug":"3d","permalink":"http://Abde5.github.io/blog/tags/3d/"},{"name":"pysoy","slug":"pysoy","permalink":"http://Abde5.github.io/blog/tags/pysoy/"}]},{"title":"GSOC devlog (26/7/2017)","slug":"gsoc3","date":"2017-07-25T22:39:03.000Z","updated":"2017-08-29T01:54:39.277Z","comments":true,"path":"2017/07/26/gsoc3/","link":"","permalink":"http://Abde5.github.io/blog/2017/07/26/gsoc3/","excerpt":"Hello again! This week I’ve been working in trying to fix what was wrong in the previous devlog. As far as I could, I’ve fixed the point of view of the main pass but still no shadows. I have to take more time to understand how the attributes in GLSL work. I’m taking a lot of time in this step…","text":"Hello again! This week I’ve been working in trying to fix what was wrong in the previous devlog. As far as I could, I’ve fixed the point of view of the main pass but still no shadows. I have to take more time to understand how the attributes in GLSL work. I’m taking a lot of time in this step… Screenshot of the main pass working, but no shadows (yet). My main goal is to get this finally working… And a bonus: I rendered the scene from the light’s source to test my matrix calculations in the _configure_matrix method and it seems to work pretty nicely!!! I should, as a next step, try again to print the depthmap to the screen. See ya!","categories":[{"name":"gsoc","slug":"gsoc","permalink":"http://Abde5.github.io/blog/categories/gsoc/"}],"tags":[{"name":"rendering","slug":"rendering","permalink":"http://Abde5.github.io/blog/tags/rendering/"},{"name":"3d","slug":"3d","permalink":"http://Abde5.github.io/blog/tags/3d/"},{"name":"pysoy","slug":"pysoy","permalink":"http://Abde5.github.io/blog/tags/pysoy/"}]},{"title":"GSOC devlog (19/7/2017)","slug":"gsoc2","date":"2017-07-19T18:56:56.000Z","updated":"2017-08-29T01:54:39.277Z","comments":true,"path":"2017/07/19/gsoc2/","link":"","permalink":"http://Abde5.github.io/blog/2017/07/19/gsoc2/","excerpt":"Hello everyone, What I did since the past (first) GSOC devlog is to learn how vertex attributes work instead of just following a shadowmapping tutorial. It helped me to fix some errors that I had before. I also had to look for another source because my code is based in a tutorial in OpenGL while the engine is powered by OpenGL ES.","text":"Hello everyone, What I did since the past (first) GSOC devlog is to learn how vertex attributes work instead of just following a shadowmapping tutorial. It helped me to fix some errors that I had before. I also had to look for another source because my code is based in a tutorial in OpenGL while the engine is powered by OpenGL ES. This is the OpenGL ES reference that I’m using now. It also uses a more suited GLSL version (I got really lost with the in/out variables in GLSL 3). I actually have the core code implemented, what I do now is to use an algorithm with 2 main steps: light pass and main pass.In the Light Pass the depthmap is calculated with the depth of each point of the scene from the light point. Then, the depthmap is used in the main pass to render the scene taking in consideration the depthmap to draw the shadows. The light source chosen for the tests is the first light point from the render’s light array (the ensemble of lightpoints in the scene). Then I simulate a directional light by looking to the origin (0,0,0) from the light’s center. I’ve rendered 3 times the scene without the shaders, with the light pass and with the main pass. I have to fix the camera angle, I think I should reset the viewport in the main pass. After that it shouldn’t take much time to do the rest of the project. Normal renderingI’ve created this scene to test the shadows of the 2 cubes projected in the white block behind them. Light PassDuring this pass the shadowmap is generated. You can see how the lightning rendering slightly changes(nothing really important). Main PassThis main pass is the final step, and the shadows should have been shown from the camera perspective. I cannot verify if the shadows have been really generated… Fix incoming, surely because I didn’t set back a viewport. See you next time for the next devlog,Abde.","categories":[{"name":"gsoc","slug":"gsoc","permalink":"http://Abde5.github.io/blog/categories/gsoc/"}],"tags":[{"name":"rendering","slug":"rendering","permalink":"http://Abde5.github.io/blog/tags/rendering/"},{"name":"3d","slug":"3d","permalink":"http://Abde5.github.io/blog/tags/3d/"},{"name":"pysoy","slug":"pysoy","permalink":"http://Abde5.github.io/blog/tags/pysoy/"}]},{"title":"GSOC 2017 Introduction","slug":"gsoc-2017-intro","date":"2017-07-11T16:26:58.000Z","updated":"2017-08-29T01:54:39.277Z","comments":true,"path":"2017/07/11/gsoc-2017-intro/","link":"","permalink":"http://Abde5.github.io/blog/2017/07/11/gsoc-2017-intro/","excerpt":"Hello everyone and welcome to my blog. I’ve created this blog mainly to document what I’m doing for the Google Summer of code 2017 inwhich I’m participating. My project is Rendering Shadows for PySoy with CopyleftGames.","text":"Hello everyone and welcome to my blog. I’ve created this blog mainly to document what I’m doing for the Google Summer of code 2017 inwhich I’m participating. My project is Rendering Shadows for PySoy with CopyleftGames. The PySoy engine is a versatile tool to create games with Python. One of the features that it lacks is shadow rendering. In this project I’m going to implement Point Shadows rendering (shadows from a point of light). To do so, I’ve been taking some resources and tutorials (link 1, link 2, link 3). For the moment I’ve rendered a depthmap of the scene. Unfortunately it still has some problems rendering it. I’m actually translating the shadow mapping algorithms to Genie. For the moment I’m fixing it, and for the end of this week it’ll be done. For the next weeks I’m looking to use the depthmap to show the shadows in a directional way, to then render a cubemap that’ll show the multiple directional shadows that’ll make the point light source (you can see that in the links above). Here you have the link to my repo where I’m working on it (bitbucket repo) Hope you like to follow this adventure,Abde","categories":[{"name":"gsoc","slug":"gsoc","permalink":"http://Abde5.github.io/blog/categories/gsoc/"}],"tags":[{"name":"rendering","slug":"rendering","permalink":"http://Abde5.github.io/blog/tags/rendering/"},{"name":"3d","slug":"3d","permalink":"http://Abde5.github.io/blog/tags/3d/"},{"name":"pysoy","slug":"pysoy","permalink":"http://Abde5.github.io/blog/tags/pysoy/"}]}]}